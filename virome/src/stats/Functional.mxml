<?xml version="1.0" encoding="utf-8"?>
<mx:Panel  xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"   
		   xmlns:cfservice="services.*"
		   xmlns:stats="stats.*" 
		   styleName="catalogPanel" 
		   width="100%" height="100%" 
		   borderStyle="solid"
		   title="Poss. Fxnal Protein" 		   
		   addedToStage="onAddtoStage()"
		   show="onShow()" xmlns:statistics="services.statistics.*">
	
	<fx:Script>
		<![CDATA[
			import com.ChartnData;
			import com.GeneralObject;
			import com.MyUtility;
			import com.events.SearchDBEvent;
			import com.events.StatsChangeViewEvent;
			import com.google.analytics.AnalyticsTracker;
			import com.google.analytics.GATracker;
			import com.google.analytics.debug.Label;
			
			import mx.charts.ChartItem;
			import mx.charts.HitData;
			import mx.charts.chartClasses.ChartBase;
			import mx.charts.events.ChartItemEvent;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.events.ToolTipEvent;
			import mx.graphics.IFill;
			import mx.graphics.SolidColor;
			import mx.rpc.events.ResultEvent;
			
			public var tracker:AnalyticsTracker;
			
			[Bindable] private var _util:MyUtility = new MyUtility();
			
			private var _flag:Boolean = true;
			private var _libraryId:Number = 0;
			private var _environment:String = "";
			private var _libraryInfoObject:Object = new Object();
			
			
			[Bindable] public function set libraryId(v:Number):void{
				_libraryId = v;
			}
			[Bindable] public function set environment(v:String):void{
				_environment = v;
			}
			[Bindable] public function set libraryInfoObject(v:Object):void{
				_libraryInfoObject = v;
			}
			[Bindable] public function set flag(v:Boolean):void{
				_flag = v;
			}
			
			public function get libraryId():Number{
				return _libraryId;
			}
			public function get environment():String{
				return _environment;
			}
			public function get libraryInfoObject():Object{
				return _libraryInfoObject;
			}
			public function get flag():Boolean{
				return _flag;
			}
			
			protected function onAddtoStage():void{
				//track
				tracker = new GATracker( this, _util.trackerId, "AS3", false );				
			}
			
			protected function onShow():void{
				//set google tracker
				tracker.trackPageview( "/STATISTICS/Functional" );
				
				var obj:GeneralObject = new GeneralObject();
				obj.libraryId = libraryId;
				obj.environment = environment;
				obj.sType = 'fxnal_overview';
				
				if ((flag) && (libraryId > 0) && (environment.length > 0)){
					flag = false;
					fxn_stats.token = Statistics.getXMLDoc(obj.struct);
				}
				
				fxnBarChart.addEventListener(ToolTipEvent.TOOL_TIP_SHOW, _util.chartNdataTip);
			}
			
			protected function fxnCatResonse(event:ResultEvent):void{
				demo.libraryInfoObject = libraryInfoObject;
				demo.showValues();
				
				var obj:Object = event.result as Object;
				if (obj.msg != "Success"){
					this.removeChild(fxnBarChart);
					var msg:Label = new Label();
					msg.text = obj.msg;
					this.addChild(msg);
				} else {
					var xml:XML = new XML(new String(obj.xdoc));
					fxnBarChart.dataProvider = xml.children();
				}
			}
			
			protected function changeView(event:ChartItemEvent):void{
				var cv:StatsChangeViewEvent = new StatsChangeViewEvent();
				var obj:Object = event.hitData.chartItem.item;
				var _sf:SearchDBEvent = new SearchDBEvent();
				
				cv.name = "_"+(obj.@LABEL).toLowerCase();
				_util.app.dispatchEvent(cv);
			}
			
			protected function chartClick(event:MouseEvent,str:String):void{
				new ChartnData(event,libraryInfoObject['LIBNAME'],str);
			}
			
			protected function myFxnFillFunc(element:ChartItem,index:Number):IFill{
				var c:SolidColor = new SolidColor(0x00cc00);
				
				var s:String = element.item.@LABEL;
				
				switch (s){
					case "ACLAME":
						return (new SolidColor(0x83AF9B,1));
					case "COG":
						return (new SolidColor(0xC8C8A9,1));
					case "GO":
						return (new SolidColor(0xF9CDAD,1));
					case "KEGG":
						return (new SolidColor(0xFC9D9C,1));
					case "SEED":
						return (new SolidColor(0xFE4365,1));					
				}
				return c;
			}
			
			protected function dataTipFunc(hd:HitData):String{
				var str:String = "<b>" + hd.item.@LABEL + "</b>:" + hd.item.@VALUE;
				
				return str;
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:CallResponder id="fxn_stats" result="fxnCatResonse(event)"/>
		<statistics:Statistics id="Statistics" showBusyCursor="true" fault="_util.faultHandler(event)"
							  destination="ColdFusion" endpoint="{_util.endpoint}" source="{_util.cfcPath}.Statistics" />
	</fx:Declarations>
	
	<mx:Canvas width="100%" height="100%" horizontalScrollPolicy="off">
		<mx:VBox width="100%" horizontalGap="0" verticalGap="0" paddingRight="20" paddingBottom="15">
			<mx:HBox width="100%" paddingBottom="25">
				<stats:LibraryDemograph id="demo" libraryInfoObject="{libraryInfoObject}" width="100%"/>
				
				<mx:VBox width="100%" backgroundColor="0x3399FF" backgroundAlpha="0.3">
					<mx:HBox width="100%">
						<mx:Image source="@Embed(source='/assets/icons/Info.png')"/>
						<mx:Text text="VIROME: data-driven Analysis" styleName="strong"/>								
					</mx:HBox>
					<mx:Text condenseWhite="true" width="100%">
						<mx:htmlText>
							<![CDATA[
							<ul>
								<li>Hover pointer over any bar for more information about ORFs hitting sequences within the SEED,
								KEGG, GO, COG, or ACLAME databases.</li><br/>
								<li>Single click on Functionally annotated databases bar will navigate to respective view of the analysis.</li><br/>
							</ul>
							]]>
						</mx:htmlText>
					</mx:Text>
				</mx:VBox>
			</mx:HBox>
			
			<mx:BarChart width="90%" id="fxnBarChart" showDataTips="true" dataTipFunction="dataTipFunc"
						 itemClick="changeView(event)"
						 click="chartClick(event,'functional_categories')"
						 toolTip="tip">
				<mx:verticalAxis>
					<mx:CategoryAxis id="yaxis" categoryField="@LABEL" title="Functional Categories"/>
				</mx:verticalAxis>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer labelRotation="90" axis="{yaxis}"/>
				</mx:verticalAxisRenderers>
				<mx:horizontalAxis>
					<mx:LinearAxis minimum="0" title="Number of viral metagenome ORFs hitting each database" id="xaxis"/>
				</mx:horizontalAxis>
				
				<mx:series>
					<mx:BarSeries id="bSeries" xField="@VALUE" fillFunction="myFxnFillFunc"/>
				</mx:series>
			</mx:BarChart>
		</mx:VBox>
	</mx:Canvas>
</mx:Panel>